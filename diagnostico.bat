@echo off
chcp 65001 >nul
echo =====================================================
echo           DIAGN√ìSTICO DEL SISTEMA
echo =====================================================
echo.
echo Verificando el estado del sistema...
echo.

:: Cambiar al directorio del script
cd /d "%~dp0"

echo üìÅ Directorio actual:
echo %cd%
echo.

echo üêç Verificando Python...
python --version >nul 2>&1
if %errorLevel% == 0 (
    for /f "tokens=*" %%i in ('python --version') do echo ‚úÖ %%i
) else (
    echo ‚ùå Python no encontrado en PATH
    echo    Instala Python desde: https://python.org
)
echo.

echo üì¶ Verificando pip...
pip --version >nul 2>&1
if %errorLevel% == 0 (
    for /f "tokens=1,2" %%i in ('pip --version') do echo ‚úÖ pip %%j
) else (
    echo ‚ùå pip no disponible
)
echo.

echo üåê Verificando entorno virtual...
if exist ".venv\" (
    echo ‚úÖ Directorio .venv encontrado
    if exist ".venv\Scripts\activate.bat" (
        echo ‚úÖ Script activate.bat encontrado
    ) else (
        echo ‚ö†Ô∏è  activate.bat no encontrado
    )
    
    if exist ".venv\Scripts\Activate.ps1" (
        echo ‚úÖ Script Activate.ps1 encontrado
    ) else (
        echo ‚ö†Ô∏è  Activate.ps1 no encontrado
    )
) else (
    echo ‚ùå Entorno virtual no encontrado
    echo    Crea uno con: python -m venv .venv
)
echo.

echo üìã Verificando archivos principales...
if exist "affinity_manager.py" (
    echo ‚úÖ affinity_manager.py
) else (
    echo ‚ùå affinity_manager.py NO ENCONTRADO
)

if exist "requirements.txt" (
    echo ‚úÖ requirements.txt
) else (
    echo ‚ùå requirements.txt NO ENCONTRADO
)
echo.

echo üìö Verificando dependencias cr√≠ticas...

:: Verificar psutil
python -c "import psutil; print(f'‚úÖ psutil {psutil.__version__}')" 2>nul
if %errorLevel% neq 0 (
    echo ‚ùå psutil no instalado
    set MISSING_DEPS=1
)

:: Verificar keyboard
python -c "import keyboard; print('‚úÖ keyboard instalado')" 2>nul
if %errorLevel% neq 0 (
    echo ‚ùå keyboard no instalado  
    set MISSING_DEPS=1
)

:: Verificar pynput
python -c "import pynput; print(f'‚úÖ pynput {pynput.__version__}')" 2>nul
if %errorLevel% neq 0 (
    echo ‚ùå pynput no instalado
    set MISSING_DEPS=1
)

:: Verificar pygame
python -c "import pygame; print(f'‚úÖ pygame {pygame.version.ver}')" 2>nul
if %errorLevel% neq 0 (
    echo ‚ùå pygame no instalado
    set MISSING_DEPS=1
)

echo.

echo üîê Verificando permisos...
net session >nul 2>&1
if %errorLevel__ == 0 (
    echo ‚úÖ Ejecut√°ndose como ADMINISTRADOR
    echo    Podr√°s modificar todos los procesos
) else (
    echo ‚ö†Ô∏è  Ejecut√°ndose como usuario normal
    echo    Algunos procesos del sistema podr√≠an no ser modificables
    echo    Para permisos completos: Click derecho ‚Üí "Ejecutar como administrador"
)
echo.

echo üíª Verificando PowerShell...
powershell -Command "Get-ExecutionPolicy -Scope CurrentUser" >nul 2>&1
if %errorLevel% == 0 (
    for /f "tokens=*" %%i in ('powershell -Command "Get-ExecutionPolicy -Scope CurrentUser"') do (
        if "%%i"=="Restricted" (
            echo ‚ö†Ô∏è  PowerShell: Pol√≠tica RESTRINGIDA
            echo    Usa: ejecutar_sin_powershell.bat
            echo    O ejecuta: solucionar_powershell.bat como admin
        ) else (
            echo ‚úÖ PowerShell: Pol√≠tica %%i (OK)
        )
    )
) else (
    echo ‚ùå Error al verificar PowerShell
)
echo.

echo =====================================================
echo                    RESUMEN
echo =====================================================

if defined MISSING_DEPS (
    echo ‚ùå FALTAN DEPENDENCIAS
    echo.
    echo üîß Para solucionarlo:
    echo    pip install -r requirements.txt
    echo.
    echo O simplemente ejecuta:
    echo    ejecutar_sin_powershell.bat
    echo.
) else (
    echo ‚úÖ TODAS LAS DEPENDENCIAS OK
    echo.
    echo üöÄ El sistema deber√≠a funcionar correctamente
    echo.
    echo Para ejecutar:
    echo ‚Ä¢ ejecutar_sin_powershell.bat (recomendado)
    echo ‚Ä¢ python affinity_manager.py
    echo.
)

echo ¬øQuieres ejecutar la aplicaci√≥n ahora? (S/N)
set /p respuesta=

if /i "%respuesta%"=="S" (
    echo.
    echo Iniciando aplicaci√≥n...
    if exist ".venv\Scripts\activate.bat" (
        call .venv\Scripts\activate.bat
    )
    python affinity_manager.py
) else (
    echo.
    echo Diagn√≥stico completado.
)

echo.
pause
