@echo off
chcp 65001 >nul
echo =====================================================
echo          PRUEBA R√ÅPIDA DEL SISTEMA
echo =====================================================
echo.
echo Esta prueba verifica que todo est√© funcionando...
echo.

cd /d "%~dp0"

echo üß™ Probando importaci√≥n de m√≥dulos...
python -c "
import sys
print(f'‚úÖ Python {sys.version.split()[0]}')

try:
    import psutil
    print('‚úÖ psutil - OK')
except ImportError:
    print('‚ùå psutil - FALTA')

try:
    import keyboard  
    print('‚úÖ keyboard - OK')
except ImportError:
    print('‚ùå keyboard - FALTA')

try:
    import pynput
    print('‚úÖ pynput - OK') 
except ImportError:
    print('‚ùå pynput - FALTA')

try:
    import pygame
    print('‚úÖ pygame - OK')
except ImportError:
    print('‚ùå pygame - FALTA')

try:
    import tkinter
    print('‚úÖ tkinter - OK')
except ImportError:
    print('‚ùå tkinter - FALTA')
"

if %errorLevel% neq 0 (
    echo.
    echo ‚ùå Error en la importaci√≥n de m√≥dulos
    echo    Ejecuta: pip install -r requirements.txt
    goto end
)

echo.
echo üîç Probando lectura de procesos...
python -c "
import psutil
procesos = list(psutil.process_iter(['pid', 'name']))
print(f'‚úÖ Se pueden leer {len(procesos)} procesos')
print(f'   Ejemplos: {[p.info[\"name\"] for p in procesos[:3]]}...')
"

if %errorLevel% neq 0 (
    echo ‚ùå Error al leer procesos
    goto end
)

echo.
echo üéÆ Probando interfaz gr√°fica...
python -c "
import tkinter as tk
root = tk.Tk()
root.withdraw()  # No mostrar la ventana
print('‚úÖ Tkinter funciona correctamente')
root.destroy()
"

if %errorLevel% neq 0 (
    echo ‚ùå Error en la interfaz gr√°fica
    goto end
)

echo.
echo ‚úÖ TODAS LAS PRUEBAS EXITOSAS
echo.
echo üöÄ El sistema est√° listo para usar.
echo    Puedes ejecutar la aplicaci√≥n sin problemas.

:end
echo.
echo =====================================================
pause
